@model IEnumerable<EF.Core.Models.Operation>

@{
    ViewData["Title"] = "Work Order - Operations Home Page";
}

<style>
    .headerDiv {
        border: 2px solid black;
    }

    .zeroOperation {
        color: red;
        font-size: large;
    }

    .haveOperation {
        color: blue;
        font-size: x-large;
    }

    .customer {
        color: blue;
        font-size: x-large;
    }
</style>

<div class="text-center">
    <h3 class="display-4">Work Order - Operations</h3>
</div>
<p></p>

<div class="headerDiv">
    <div class="text-center">
        @{
            if (Model.Count() > 0)
            {
                <span class="haveOperation">Work Order # @Model.FirstOrDefault().WorkOrderId</span>
            }
            else
            {
                <span class="zeroOperation">Work Order # @ViewBag.SelectedWorkOrderId has NO Operation !</span>
            }
        }
    </div>
    <div class="text-center">
        @{
            if (ViewBag.Customer != null)
            {
                <span class="customer">Customer : @ViewBag.Customer</span>
            }
            else
            {
                <span class="zeroOperation">Customer : N/A</span>
            }
        }
    </div>
</div>
<p></p>


<div>
    <a asp-action="Create">Create - [Work Order - Operation]</a>
</div>

<!-- this will hold partial view (modal) -->
<div id="PlaceHolderHere"></div>

<p></p>
<table class="table" id="operationsTable">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                OP
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details)
            </th>
            <th>
                OP Status
            </th>
            <th>
                OP Start Date
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OperationId)
                </td>


                @{
                    var opNumber = "";
                    if (item.OperationNumber == (int)10)
                    {
                        opNumber = "Spindle - 10";
                    }
                    if (item.OperationNumber == (int)20)
                    {
                        opNumber = "Hub_Single_Head - 20";
                    }
                    if (item.OperationNumber == 30)
                    {
                        opNumber = "Hub_Double_Head - 30";
                    }
                    if (item.OperationNumber == 40)
                    {
                        opNumber = "Push_Cups - 40";
                    }
                    if (item.OperationNumber == 50)
                    {
                        opNumber = "Assembly_Spindle_Hub - 50";
                    }
                    if (item.OperationNumber == 60)
                    {
                        opNumber = "Paint - 60";
                    }
                    if (item.OperationNumber == 70)
                    {
                        opNumber = "Packaging - 70";
                    }
                    if (item.OperationNumber == 80)
                    {
                        opNumber = "Rework_Spindle - 80";
                    }
                    if (item.OperationNumber == 90)
                    {
                        opNumber = "Rework_Hub - 90";
                    }
                }
                <td>
                    @opNumber
                </td>


                @{
                    var opdetails = "";
                    if (item.Details != null)
                    {
                        opdetails = item.Details;
                    }
                    else
                    {
                        opdetails = "N/A";
                    }
                }
                <td>
                    @opdetails
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.OperationStatus)
                </td>

                @{
                    var opdate = "";
                    if (item.OperationStartDate != null)
                    {
                        opdate = item.OperationStartDate.Value.ToShortDateString();
                    }
                    else
                    {
                        opdate = "N/A";
                    }
                }
                <td>
                    @opdate
                </td>

                <td>
                    <button id="@item.OperationId" 
                            class='btn btn-primary opEdit'>
                        Edit
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>



@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            var PlaceHolderElement = $('#PlaceHolderHere');

            var errorCode = 0;

            // edit
            // get
            $('.opEdit').click(function () {
                var operationId = $(this).attr("id");
                console.log(operationId);

                var url = '@Url.Action("Edit", "Operation")' + '\\' + operationId;
                $.get(url).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                });
            });

            // edit - delete
            // post
            PlaceHolderElement.on('click', '[data-save="modal"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();

                var url = '@Url.Action("Edit", "Operation")';

                $.post(url, sendData).done(function (response) {
                    console.log(response);
                    console.log(response.result.statusCode);
                    console.log(response.result.message);
                    var mErrors = '';
                    if (response.result.statusCode == 0) {
                        errorCode = 0;
                        bkTimer(response.result);
                        resetUI();
                    }
                    else if (response.result.statusCode == -1) {
                        errorCode = -1;
                        bkTimer(response.result);
                        // resetUI();
                    }
                    else if (response.result.statusCode == 1) {
                        errorCode = 1;
                        // model error
                        mErrors += '<font color="red">';
                        mErrors += response.result.message;
                        mErrors += "<ul>";
                        $.each(response.result.modelErrors, function (key, value) {
                            mErrors += "<li>" + value + "</li>";
                        });
                        mErrors += "</ul></font>";
                    }
                    else {
                        bkTimer(response.result);
                        resetUI();
                    }
                    $('#opStatus').html(mErrors);
                });
            });

            // success / dal error
            function bkTimer(result) {
                var div = $("#floater");
                var content = '';
                if (result.statusCode == 0) {
                    content += '<img src="../../Images/success.png" style = "width:50px;height:50px;" /> ';
                    content += '<font color="green">' + result.message + '</font>';
                }
                else if (result.statusCode == -1) {
                    content += '<img src="../../Images/error.png" style = "width:50px;height:50px;" /> ';
                    content += '<font color="red">' + result.message + '</font>';
                }
                else {
                    content += '<img src="../../Images/error.png" style = "width:50px;height:50px;" /> ';
                    content += '<font color="red">' + result.Message + '</font>';
                }
                div.html(content);
                div.fadeIn("slow");

                if (errorCode == 0) {
                    div.queue(function () {
                        setTimeout(function () {
                            div.dequeue();

                            PlaceHolderElement.find('.modal').modal('hide');
                            window.location.reload(true);

                        }, 3000);
                    });
                    div.fadeOut("fast");
                }
                else {

                }
            };
            function resetUI() {
                $('#Details').val('');
                $('#OperationStatus').val(0);
                $('#OperationStartDate').val('');
            };
        });
    </script>
}